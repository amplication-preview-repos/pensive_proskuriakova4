/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { LiveUpdateListRelationFilter } from "../../liveUpdate/base/LiveUpdateListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { PriceHistoryListRelationFilter } from "../../priceHistory/base/PriceHistoryListRelationFilter";
import { EnumCropSeason } from "./EnumCropSeason";

@InputType()
class CropWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => LiveUpdateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LiveUpdateListRelationFilter)
  @IsOptional()
  @Field(() => LiveUpdateListRelationFilter, {
    nullable: true,
  })
  liveUpdates?: LiveUpdateListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PriceHistoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PriceHistoryListRelationFilter)
  @IsOptional()
  @Field(() => PriceHistoryListRelationFilter, {
    nullable: true,
  })
  priceHistories?: PriceHistoryListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumCropSeason,
  })
  @IsEnum(EnumCropSeason)
  @IsOptional()
  @Field(() => EnumCropSeason, {
    nullable: true,
  })
  season?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  typeField?: StringNullableFilter;
}

export { CropWhereInput as CropWhereInput };
